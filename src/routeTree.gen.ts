/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthTopicSelectionImport } from './routes/auth/topic-selection'
import { Route as AuthProfileCompleteImport } from './routes/auth/profile-complete'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthCallbackImport } from './routes/auth/callback'
import { Route as TopicsTopicIdEventsEventIdImport } from './routes/topics/$topicId/events/$eventId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthTopicSelectionRoute = AuthTopicSelectionImport.update({
  id: '/auth/topic-selection',
  path: '/auth/topic-selection',
  getParentRoute: () => rootRoute,
} as any)

const AuthProfileCompleteRoute = AuthProfileCompleteImport.update({
  id: '/auth/profile-complete',
  path: '/auth/profile-complete',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootRoute,
} as any)

const TopicsTopicIdEventsEventIdRoute = TopicsTopicIdEventsEventIdImport.update(
  {
    id: '/topics/$topicId/events/$eventId',
    path: '/topics/$topicId/events/$eventId',
    getParentRoute: () => rootRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/profile-complete': {
      id: '/auth/profile-complete'
      path: '/auth/profile-complete'
      fullPath: '/auth/profile-complete'
      preLoaderRoute: typeof AuthProfileCompleteImport
      parentRoute: typeof rootRoute
    }
    '/auth/topic-selection': {
      id: '/auth/topic-selection'
      path: '/auth/topic-selection'
      fullPath: '/auth/topic-selection'
      preLoaderRoute: typeof AuthTopicSelectionImport
      parentRoute: typeof rootRoute
    }
    '/topics/$topicId/events/$eventId': {
      id: '/topics/$topicId/events/$eventId'
      path: '/topics/$topicId/events/$eventId'
      fullPath: '/topics/$topicId/events/$eventId'
      preLoaderRoute: typeof TopicsTopicIdEventsEventIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/profile-complete': typeof AuthProfileCompleteRoute
  '/auth/topic-selection': typeof AuthTopicSelectionRoute
  '/topics/$topicId/events/$eventId': typeof TopicsTopicIdEventsEventIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/profile-complete': typeof AuthProfileCompleteRoute
  '/auth/topic-selection': typeof AuthTopicSelectionRoute
  '/topics/$topicId/events/$eventId': typeof TopicsTopicIdEventsEventIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/callback': typeof AuthCallbackRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/profile-complete': typeof AuthProfileCompleteRoute
  '/auth/topic-selection': typeof AuthTopicSelectionRoute
  '/topics/$topicId/events/$eventId': typeof TopicsTopicIdEventsEventIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/profile-complete'
    | '/auth/topic-selection'
    | '/topics/$topicId/events/$eventId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/profile-complete'
    | '/auth/topic-selection'
    | '/topics/$topicId/events/$eventId'
  id:
    | '__root__'
    | '/'
    | '/auth/callback'
    | '/auth/login'
    | '/auth/profile-complete'
    | '/auth/topic-selection'
    | '/topics/$topicId/events/$eventId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthCallbackRoute: typeof AuthCallbackRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthProfileCompleteRoute: typeof AuthProfileCompleteRoute
  AuthTopicSelectionRoute: typeof AuthTopicSelectionRoute
  TopicsTopicIdEventsEventIdRoute: typeof TopicsTopicIdEventsEventIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthCallbackRoute: AuthCallbackRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthProfileCompleteRoute: AuthProfileCompleteRoute,
  AuthTopicSelectionRoute: AuthTopicSelectionRoute,
  TopicsTopicIdEventsEventIdRoute: TopicsTopicIdEventsEventIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/callback",
        "/auth/login",
        "/auth/profile-complete",
        "/auth/topic-selection",
        "/topics/$topicId/events/$eventId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/callback": {
      "filePath": "auth/callback.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/profile-complete": {
      "filePath": "auth/profile-complete.tsx"
    },
    "/auth/topic-selection": {
      "filePath": "auth/topic-selection.tsx"
    },
    "/topics/$topicId/events/$eventId": {
      "filePath": "topics/$topicId/events/$eventId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
